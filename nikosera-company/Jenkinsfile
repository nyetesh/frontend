pipeline {
  agent any

    tools {
        nodejs 'NodeJS16'
    }

    environment {
    harborRegistry = "https://dev-registry.f1soft.com/harbor/projects"
    REGISTRY_URL = "dev-registry.f1soft.com/corporatebanking"
    WORKLOAD_NAME = '/project/c-rlmgg:p-scsj7/workload/deployment:corporatebanking'
    }

  stages {

        stage('Install npm') {
            steps {
                echo 'echoing installing npm.'
                sh 'npm install'

            }
        }


        stage('Build'){
            steps {
                echo 'echo Build Admin in progress.'
                sh 'npm run build:prod -w nikosera-company'
            }
        }

        stage('Build Docker Image') {

             steps {
                   sh 'echo Building Docker Image....'
                   sh 'docker build -t dev-registry.f1soft.com/corporatebanking/admin-web:${BUILD_NUMBER} nikosera-company/'
             }
            }

        stage('Push Docker Image') {
              steps {
               withDockerRegistry(credentialsId: 'harbor_cred', url: harborRegistry) {
               sh 'docker push dev-registry.f1soft.com/corporatebanking/admin-web:${BUILD_NUMBER}'
        }

      }

    }

      stage('Deploy To Rancher') {
                    steps {
                        script {
                             deployToRancher("${REGISTRY_URL}/admin-web:${BUILD_NUMBER}", "${WORKLOAD_NAME}:admin-web")
                             }
                         }
                 }
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '1', artifactNumToKeepStr: '1'))
    }


}

def deployToRancher(image, workload) {
    rancherRedeploy alwaysPull: true, credential: "rancherCredential", images: image, workload: workload
}

